stages:
  - test
  - build
  # - staging
  # - release

test:
  stage: test
  image: composer:1.6.5

  before_script:
    - apk update &> /dev/null
    - apk upgrade &> /dev/null
    - apk add --no-cache
      g++
      make
      autoconf
      freetype
      libpng
      libjpeg
      freetype-dev
      libpng-dev
      jpeg-dev &> /dev/null
    - docker-php-ext-configure gd
      --with-freetype-dir=/usr/lib/
      --with-png-dir=/usr/lib/
      --with-jpeg-dir=/usr/lib/
      --with-gd &> /dev/null
    - pecl install xdebug &> /dev/null
    - docker-php-ext-enable xdebug &> /dev/null
    - docker-php-ext-install gd &> /dev/null
    - composer config -g cache-dir .composer-cache
    - composer global require hirak/prestissimo

  before_script:
    - mkdir -p storage/logs
    - mkdir -p storage/app/cache
    - mkdir -p storage/app/compiled
    - mkdir -p storage/framework/cache
    - mkdir -p storage/framework/views
    - mkdir -p storage/framework/sessions
    - mkdir -p storage/framework/testing

  script:
    - composer install --ignore-platform-reqs --no-interaction
    # - composer test

  cache:
    paths:
      - .composer-cache/
      - vendor/

build:
  stage: build
  image: docker:19.03
  variables:
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:19.03-dind
  only:
    refs:
      - tags
      - master

  before_script:
    - docker info
    - apk update &> /dev/null
    - apk upgrade &> /dev/null
    - apk add --no-cache
      jq
      unzip
      curl
      python
      which
      bash &> /dev/null
    - curl -sSL https://sdk.cloud.google.com | bash
    - PATH=$PATH:/root/google-cloud-sdk/bin

    - 'LAST_APP_TAG=`curl -f -S -s -H "PRIVATE-TOKEN: $GITLAB_TOKEN" "https://gitlab.com/api/v4/projects/13475444/repository/tags?per_page=1" | jq -r ".[0].name"`'
    - if [ "$CI_COMMIT_REF_NAME" = "master" ]; then APP_REF="master"; else APP_REF="$LAST_APP_TAG"; fi
    - 'curl -f -s -L -o app.zip -H "PRIVATE-TOKEN: $GITLAB_TOKEN" "https://gitlab.com/api/v4/projects/13475444/jobs/artifacts/$APP_REF/download?job=build"'
    - unzip -q app.zip -d build
    - cp -r build/dist/spa/* public/
    - echo "App artifacts successful downloaded from $APP_REF"

    - export CONTAINER_IMAGE="gcr.io/$GCLOUD_PROJECT/grandchef-product"
    - export CONTAINER_IMAGE_TAG="$CONTAINER_IMAGE:latest"
    - export CONTAINER_IMAGE_TAG_BETA="$CONTAINER_IMAGE:beta"

  script:
    - echo "$GCR_KEYFILE" > ./gcr-api-key.json
    - gcloud auth activate-service-account --key-file gcr-api-key.json
    - gcloud config set project $GCLOUD_PROJECT
    - cat gcr-api-key.json | docker login -u _json_key --password-stdin https://gcr.io
    - docker build -t "$CONTAINER_IMAGE_TAG_BETA" .
    - docker push "$CONTAINER_IMAGE_TAG_BETA"
